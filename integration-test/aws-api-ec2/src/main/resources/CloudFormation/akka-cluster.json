{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters": {
    "Build": {
      "Description": "URL of zip file obtained from running sbt universal:packageBin",
      "Type": "String"
    },
    "SSHLocation": {
      "Description": "The IP address range that can be used to SSH to the EC2 instances",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    },
    "InstanceCount": {
      "Description": "Number of EC2 instances for your Akka Cluster (must be between 2 and 50)",
      "Type": "Number",
      "Default": 3,
      "MinValue": 2,
      "MaxValue": 50,
      "ConstraintDescription": "Must be a number between 2 and 50"
    },
    "InstanceType": {
      "Description": "Instance type",
      "Type": "String",
      "Default": "m3.xlarge",
      "AllowedValues": [
        "m3.medium", "m3.xlarge", "m3.2xlarge"
      ]
    },
    "KeyPair": {
      "Description": "Key Pair (for SSH access). Use 'none' to disable SSH access.",
      "Type": "String"
    },
    "Purpose" : {
      "Description": "Purpose tag (i.e. development, staging, production, demo)",
      "Type": "String",
      "Default": "demo"
    }
  },
  "Conditions": {
    "HasKeyPair": {"Fn::Not": [{"Fn::Equals": ["none", {"Ref": "KeyPair"}]}]}
  },
  "Resources": {
    "LaunchConfiguration": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "ImageId": "ami-97785bed",
        "IamInstanceProfile": {
          "Ref": "IAMInstanceProfile"
        },
        "InstanceType": {
          "Ref": "InstanceType"
        },
        "KeyName": {"Fn::If": ["HasKeyPair", {"Ref": "KeyPair"}, {"Ref": "AWS::NoValue"}]},
        "SecurityGroups": [
          {
            "Ref": "AkkaClusterSecurityGroup"
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": ["", ["#!/bin/bash -xe\n",
              "sudo yum install -y java-11-openjdk\n",
              "sudo yum remove -y java-1.7.0-openjdk\n",
              "wget ", {"Ref": "Build"}, "\n",
              "export PURPOSE=", {"Ref": "Purpose"}, "\n",
              "unzip app.zip\n",
              "cd app\n",
              "cd bin\n",
              "MY_IP=`curl -s http://169.254.169.254/latest/meta-data/local-ipv4`\n",
              "./bootstrap-demo-aws-api-ec2-tag-based -Dakka.management.http.hostname=$MY_IP -Dakka.remote.netty.tcp.hostname=$MY_IP &"
            ]]
          }
        }
      }
    },
    "AkkaAutoScalingGroup": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "LaunchConfigurationName": {
          "Ref": "LaunchConfiguration"
        },
        "AvailabilityZones": {
          "Fn::GetAZs": ""
        },
        "MinSize": {
          "Ref": "InstanceCount"
        },
        "MaxSize": {
          "Ref": "InstanceCount"
        },
        "DesiredCapacity": {
          "Ref": "InstanceCount"
        },
        "Tags": [
          {
            "Key": "service",
            "Value": "products-api",
            "PropagateAtLaunch": true
          },
          {
            "Key": "purpose",
            "Value": {"Ref": "Purpose"},
            "PropagateAtLaunch": true
          }
        ]
      }
    },
    "IAMInstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [
          {
            "Ref": "EC2ReadOnlyRole"
          }
        ]
      }
    },
    "EC2ReadOnlyPolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "Roles": [
          {
            "Ref": "EC2ReadOnlyRole"
          }
        ],
        "PolicyName": "EC2ReadOnlyPolicy",
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": {
            "Effect": "Allow",
            "Action": [
              "ec2:DescribeInstances"
            ],
            "Resource": "*"
          }
        }
      }
    },
    "EC2ReadOnlyRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "Path": "/",
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "ec2.amazonaws.com"
                ]
              }
            }
          ]
        }
      }
    },
    "AkkaClusterSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "for akka",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": 22,
            "ToPort": 22,
            "CidrIp": {
              "Ref": "SSHLocation"
            }
          }
        ]
      }
    },
    "AkkaClusterSecurityGroupIngressForPeers2552": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupName": {
          "Ref": "AkkaClusterSecurityGroup"
        },
        "IpProtocol": "tcp",
        "FromPort": 2552,
        "ToPort": 2552,
        "SourceSecurityGroupName": {
          "Ref": "AkkaClusterSecurityGroup"
        }
      }
    },
    "AkkaClusterSecurityGroupIngressForOutsiders8558": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupName": {
          "Ref": "AkkaClusterSecurityGroup"
        },
        "IpProtocol": "tcp",
        "FromPort": 8558,
        "ToPort": 8558,
        "CidrIp": {"Ref": "SSHLocation"}
      }
    },
    "AkkaClusterSecurityGroupIngressForPeers8558": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupName": {
          "Ref": "AkkaClusterSecurityGroup"
        },
        "IpProtocol": "tcp",
        "FromPort": 8558,
        "ToPort": 8558,
        "SourceSecurityGroupName": {
          "Ref": "AkkaClusterSecurityGroup"
        }
      }
    }
  },
  "Outputs" : {
    "AutoScalingGroupName": {
      "Value": {
        "Ref": "AkkaAutoScalingGroup"
      },
      "Description": "ASG name"
    }
  }
}
