#deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: akka-rollingupdate-demo
  name: akka-rollingupdate-demo
spec:
  replicas: 3
  selector:
    matchLabels:
     app: akka-rollingupdate-demo
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate

  template:
    metadata:
      labels:
        app: akka-rollingupdate-demo
        actorSystemName: akka-rollingupdate-demo
    spec:
      containers:
      - name: akka-rollingupdate-demo
        image: integration-test-rollingupdate-kubernetes:1.3.3.7
        # Remove for a real project, the image is picked up locally for the integration test
        imagePullPolicy: Never
        #health
        livenessProbe:
          httpGet:
            path: /alive
            port: management
        readinessProbe:
          httpGet:
            path: /ready
            port: management
        #health
        ports:
        # akka-management bootstrap
        - name: management
          containerPort: 8558
          protocol: TCP
        - name: http
          containerPort: 8080
          protocol: TCP
        env:
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        # The pod deletion cost will use this var to identity the pod to be annotated (in case that applies)
        - name: KUBERNETES_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: REQUIRED_CONTACT_POINT_NR
          value: "3"
#deployment
---
#rbac
#
# Create a role, `pod-annotator`, that can list pods and
# bind the default service account in the namespace
# that the binding is deployed to to that role.
#

kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: pod-annotator
rules:
- apiGroups: [""] # "" indicates the core API group
  resources: ["pods"]
  verbs: ["get", "watch", "list", "patch"] # requires "patch" to annotate the pod
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: annotate-pods
subjects:
  # Uses the default service account.
  # Consider creating a dedicated service account to run your
  # Akka Cluster services and binding the role to that one.
- kind: ServiceAccount
  name: default
roleRef:
  kind: Role
  name: pod-annotator
  apiGroup: rbac.authorization.k8s.io
#rbac
