akka {
  actor.provider = "cluster"
  extensions = ["akka.management.cluster.bootstrap.ClusterBootstrap"]


  discovery {
    aggregate {
      discovery-methods = ["kubernetes-api", "config"]
    }
    config.services.local-cluster.endpoints = [
      {
        host = "127.0.0.1"
        port = 8558
      }
    ]
  }


  management {
    http.hostname = "127.0.0.1"
    http.port = 8558
    cluster.bootstrap {
      contact-point-discovery {
        # to allow easier testing, we aggregate kubernetes-api and then use config as a fallback,
        # native-image-brokenness would cause class not found or linker error, so k8 api discovery failing because
        # not running inside k8 means things likely works as expected (not a watertight check though)
        discovery-method = aggregate
        service-name = "local-cluster"
        required-contact-point-nr = 1
      }
    }
  }

  cluster {
    downing-provider-class = "akka.cluster.sbr.SplitBrainResolverProvider"
  }
}

# just to keep the class name out of graalvms sight
pod-cost-class = "akka.rollingupdate.kubernetes.PodDeletionCost"