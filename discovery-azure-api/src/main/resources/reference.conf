######################################################
# Akka Service Discovery Azure Config
######################################################

akka.discovery {
  # Set the following in your application.conf if you want to use this discovery mechanism:
  # method = azure-rbac-aks-api
  azure-rbac-aks-api {
    class = akka.discovery.azureapi.rbac.aks.AzureRbacAksServiceDiscovery

    authority-host = "https://login.microsoftonline.com/"
    authority-host = ${?AZURE_AUTHORITY_HOST}

    # Required
    # Injected by the workload identity controller manager
    client-id = ${AZURE_CLIENT_ID}

    federated-token-file = "/var/run/secrets/azure/tokens/azure-identity-token"
    federated-token-file = ${?AZURE_FEDERATED_TOKEN_FILE}

    # Required
    # Injected by the workload identity controller manager
    tenant-id = ${AZURE_TENANT_ID}

    # AKS uses a pair of first-party Microsoft Entra applications
    # The AKS Microsoft Entra server application ID(scope) that the server side uses is 6dae42f8-4368-4678-94ff-3960e28e3630/.default
    entra-server-id = "6dae42f8-4368-4678-94ff-3960e28e3630/.default"
    entra-server-id = ${?AZURE_SERVER_ID}

    # API server, cert and token information. Currently these are present on K8s versions: 1.6, 1.7, 1.8, and perhaps more
    api-ca-path = "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"
    api-token-path = "/var/run/secrets/kubernetes.io/serviceaccount/token"

    # Required
    api-service-host = ${KUBERNETES_SERVICE_HOST}
    api-service-port = ${KUBERNETES_SERVICE_PORT}

    # Namespace discovery path
    #
    # If this path doesn't exist, the namespace will default to "default".
    pod-namespace-path = "/var/run/secrets/kubernetes.io/serviceaccount/namespace"

    # Namespace to query for pods.
    #
    # Set this value to a specific string to override discovering the namespace using pod-namespace-path.
    pod-namespace = "<pod-namespace>"
    pod-namespace = ${?KUBERNETES_NAMESPACE}

    # Domain of the k8s cluster
    pod-domain = "cluster.local"

    # Selector value to query pod API with.
    # `%s` will be replaced with the configured effective name, which defaults to the actor system name
    pod-label-selector = "app=%s"

    # Enables the usage of the raw IP instead of the composed value for the resolved target host
    # Note that when using names, the deprecated DNS form <a>-<b>-<c>-<d>.<ns>.pod.<zone> is used
    # and that may not work on newer Kubernetes versions.
    use-raw-ip = true

    # When set, validate the container is not in 'waiting' state
    container-name = ""
  }
}
