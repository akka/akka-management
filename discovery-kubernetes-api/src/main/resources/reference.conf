######################################################
# Akka Service Discovery Kubernetes API Config       #
######################################################

akka.discovery {
  # There are two variants of this discovery mechanism:
  #
  # * 'kubernetes-api' is designed for bootstrapping a cluster and does not take readiness
  #   into account.  It may not be suitable for discovering services outside of the cluster.
  #
  # * 'kubernetes-api-for-client' is designed for discovering services outside of the cluster
  #   and takes readiness into account (thus facilitating client side load-balancing) without
  #   the need to depend on how a k8s cluster's DNS is configured (e.g. caching).
  #
  #   'kubernetes-api-for-client' IS NOT SUITABLE FOR BOOTSTRAPPING A CLUSTER.
  #
  # If deploying a service to Kubernetes and using this discovery mechanism, set in your application.conf:
  #
  # akka.management.cluster.bootstrap.contact-point-discovery.discovery-method = kubernetes-api
  # akka.discovery.method = kubernetes-api-for-client
  #
  # This would use the liveness-only variant for bootstrap and the readiness-aware variant for discovering
  # the pods in other services (e.g. for gRPC).

  # liveness-only
  kubernetes-api {
    class = akka.discovery.kubernetes.KubernetesApiServiceDiscovery

    # API server, cert and token information. Currently these are present on K8s versions: 1.6, 1.7, 1.8, and perhaps more
    api-ca-path = "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"
    api-token-path = "/var/run/secrets/kubernetes.io/serviceaccount/token"
    api-service-host-env-name = "KUBERNETES_SERVICE_HOST"
    api-service-port-env-name = "KUBERNETES_SERVICE_PORT"

    # Namespace discovery path
    #
    # If this path doesn't exist, the namespace will default to "default".
    pod-namespace-path = "/var/run/secrets/kubernetes.io/serviceaccount/namespace"

    # Namespace to query for pods.
    #
    # Set this value to a specific string to override discovering the namespace using pod-namespace-path.
    pod-namespace = "<pod-namespace>"
    pod-namespace = ${?KUBERNETES_NAMESPACE}

    # Domain of the k8s cluster
    pod-domain = "cluster.local"

    # Selector value to query pod API with.
    # `%s` will be replaced with the configured effective name, which defaults to the actor system name
    pod-label-selector = "app=%s"

    # Enables the usage of the raw IP instead of the composed value for the resolved target host
    # Note that when using names, the deprecated DNS form <a>-<b>-<c>-<d>.<ns>.pod.<zone> is used
    # and that may not work on newer Kubernetes versions.
    use-raw-ip = true

    # When set, validate the container is not in 'waiting' state
    container-name = ""
  }

  # readiness-aware
  # All configuration for this discovery method, apart from the class, is shared with kubernetes-api
  kubernetes-api-for-client = {
    class = akka.discovery.kubernetes.ExternalKubernetesApiServiceDiscovery
  }
}
